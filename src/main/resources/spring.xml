<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/mvc  http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/util  http://www.springframework.org/schema/util/spring-util-4.2.xsd

	">
	<!-- spring是bean的容器(service+repository)-->
	<context:component-scan base-package="cn">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 
		所有数据库操作的源头 实现自接口DataSource
		DriverManagerDataSource(请求产生一个连接 用完关闭 连接重用 连接池 比如 dbcp,c3p0,druid(阿里巴巴 监控功能))
		www.github.io是开源的代码
	 -->
	 <context:property-placeholder location="classpath:jdbc.properties"/>
	 <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
	 	<property name="url" value="${url}"></property>
	 	<property name="driverClassName" value="${driverClass}"></property>
	 	<property name="username" value="${username1}"></property>
	 	<property name="password" value="${password}"></property>
	 	<!-- 默认初始化的连接个数 -->
	 	<property name="initialSize" value="1"></property>
	 	<!-- 最大允许的连接个数 -->
	 	<property name="maxActive" value="200"></property>
 		<!-- 最大的等待人数 -->
	 	<property name="maxIdle" value="100"></property>
	 	<!-- 开启sql统计功能 -->
	 	<property name="filters" value="stat"></property>
	 </bean>
	 
	 
	 
	 <!-- 集成mybatis -->
	 <!-- 配置session工厂 -->
	 <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	 	<property name="dataSource" ref="dataSource"></property>
	 </bean>
	 <bean id="sessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	 	<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
	 </bean>
	 <!-- 扫描mybatis的接口映射 -->
	 <bean id="scannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	 	<property name="basePackage" value="cn.*..*.dao"></property>	
	 </bean>
	 
	 
	 <!-- 事务管理器 -->
	 <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	 	<property name="dataSource" ref="dataSource"></property>
	 </bean>
	 
	 
	 
	 <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
	  	<property name="realm" ref="myDbRealm"/>
	  	<property name="authenticator" ref="authentictor"></property>
	</bean>
	<bean id="f" class="org.apache.shiro.authc.pam.FirstSuccessfulStrategy">
  	</bean>
	<bean id="authentictor" class="org.apache.shiro.authc.pam.ModularRealmAuthenticator">
    	<property name="authenticationStrategy" ref="f"></property>
    	<property name="realms" ref="myDbRealm"></property>
  	</bean>
	
	<!--后置处理器-->
	 <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	 <!-- spring配置ini-->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
	    <property name="securityManager" ref="securityManager"/>
	    <property name="loginUrl" value="/login.html"/>
	    <property name="unauthorizedUrl" value="/un.html"/>
	    <property name="filters">
	    	<map>
            	<entry key="authc" value-ref="myFilter"/>
        	</map>
	    </property>
	    <property name="filterChainDefinitions">
	        <value>
	           /**=authc
	        </value>
	    </property>
	</bean>


</beans>